//python -c "import numpy as np;a=1+2j;b=2+3j;print a*b;"  (-4+7j)
//python -c "import numpy as np;a=[[1,2],[3,4]];b=[[1,2,3],[1,2,3],[1,2,3]];c=np.kron(a,b);print c;"

#include <iostream>
#include <array>
#include <complex>
using namespace std;

using Elem = complex<double>;

template<size_t M = 0/*row*/,size_t N = 0/*col*/>
using Matrix = array<array<Elem,N>,M>; 

template<typename T>
void MatrixDump(T m)
{
   for(auto row:m)
   {
     for(auto elem:row)
     {
       cout << " " << elem;
     }
     cout << endl;
   }
}
int main()
{
	Elem z1(1,2);
	Elem z2 = {2,3};
  Matrix<1,3> m1={{
    {{{1,2},{2,3},{3,4}}}
  }};

  Matrix<3,4> m2={{
    {{1,2,3,4}},
    {{1,2,3,4}},
    {{1,2,3,4}},
  }};

  Matrix<1,4> m3;

  for(int i=0;i<1;i++)
  {
    for(int j=0;j<4;j++)
    {
      for(int k=0;k<3;k++)
      {
        m3[i][j] += m1[i][k]*m2[k][j]; 
      }
    }
  }
  MatrixDump(m1)  ;
  MatrixDump(m2)  ;
  MatrixDump(m3)  ;

  return 0;
}
