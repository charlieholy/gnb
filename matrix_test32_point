#include <iostream>
#include <complex>
#include <ctime>
#include <stdint.h>
#include <iostream>
#include <string>
#include <sys/time.h>
#include <array>
using std::string;


static inline int64_t getTimeNs()
{
    struct timespec ts;
    clock_gettime(CLOCK_REALTIME, &ts);
    return ts.tv_sec*1000000000 + ts.tv_nsec;
}
using namespace std;

int main()
{

    float m1[32][2] =  
        {{0.7071, 0.7072}, {0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},
        {0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},
        {0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},
        {0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072},{0.7071, 0.7072}};
    float m2[32][32][2];
    float m3[32][2] = {{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},
    {0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},
    {0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},
    {0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074},{0.7073, 0.7074}};


    float mp[2][3][4] ;
    for(int i=0;i<24;i++)
    {
        *((float*)mp+i)  = i+0.7071;
    }

    for(int i=0;i<2;i++)
    {
        for(int j=0;j<3;j++)
        {
            for(int k=0;k<4;k++)
            {
                cout << mp[i][j][k] << endl;
            }
        }
    }


    for(int i=0;i<2;i++)
    {
        for(int j=0;j<3;j++)
        {
            int ij = i*j;
            for(int k=0;k<4;k++)
            {
                cout << *((float*)mp+ i*12+j*4+k) << endl;
            }
        }
    }



    // float m12[32][2] = {0};
    // float m23[2]={0,0};
    // auto beforeTs = getTimeNs() ;
    // for (int j = 0; j < 32; j++)
    // {
    //     for (int k = 0; k < 32; k++)
    //     {
    //         m12[j][0] +=  (m1[k][0]*m2[k][j][0] - m1[k][1]*m2[k][j][1]);
    //         m12[j][1] +=  (m1[k][1]*m2[k][j][0] + m1[k][0]*m2[k][j][1]);
    //     }
    // }
    
    // for (int k = 0; k < 32; k++)
    // {
    //     m23[0] +=  (m12[k][0]*m3[k][0] - m12[k][1]*m3[k][1]);
    //     m23[1] +=  (m12[k][1]*m3[k][0] + m12[k][0]*m3[k][1]);
    // }
    // auto afterTs = getTimeNs() ;

    // cout << "m23 " << m23[0] << "+" << m23[1] << endl;
    // cout << "cost: " << afterTs - beforeTs << " ns" << endl;
        
    





    return 0;
}
